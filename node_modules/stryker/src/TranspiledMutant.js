"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TranspiledMutant = /** @class */ (function () {
    /**
     * Creates a transpiled mutant
     * @param mutant The mutant which is just transpiled
     * @param transpileResult The transpile result of the mutant
     * @param changedAnyTranspiledFiles Indicated whether or not this mutant changed the transpiled output files. This is not always the case, for example: mutating a TS interface
     */
    function TranspiledMutant(mutant, transpileResult, changedAnyTranspiledFiles) {
        this.mutant = mutant;
        this.transpileResult = transpileResult;
        this.changedAnyTranspiledFiles = changedAnyTranspiledFiles;
    }
    TranspiledMutant.create = function (mutant, transpileResult, unMutatedFiles) {
        return new TranspiledMutant(mutant, transpileResult, someFilesChanged());
        function someFilesChanged() {
            return transpileResult.outputFiles.some(function (file) { return fileChanged(file); });
        }
        function fileChanged(file) {
            if (unMutatedFiles) {
                var unMutatedFile = unMutatedFiles.find(function (f) { return f.name === file.name; });
                return !unMutatedFile || unMutatedFile.content !== file.content;
            }
            else {
                return true;
            }
        }
    };
    return TranspiledMutant;
}());
exports.default = TranspiledMutant;
//# sourceMappingURL=TranspiledMutant.js.map